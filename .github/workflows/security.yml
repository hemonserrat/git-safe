name: Security Scan

on:
  schedule:
    # Run weekly on Sundays at 2 AM UTC
    - cron: '0 2 * * 0'
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    permissions:
      actions: read
      contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'python' ]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}

    - name: Autobuild
      uses: github/codeql-action/autobuild@v3

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety pip-audit

    - name: Run safety check
      run: |
        safety check --json --output safety-report.json || true
        safety check

    - name: Run pip-audit
      run: |
        pip-audit --format=json --output=pip-audit-report.json || true
        pip-audit

    - name: Upload vulnerability reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: vulnerability-reports
        path: |
          safety-report.json
          pip-audit-report.json

  secrets-scan:
    name: Secrets Scan
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Run TruffleHog OSS
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
        extra_args: --debug --only-verified

  crypto-analysis:
    name: Cryptographic Analysis
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install analysis tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit[toml] semgrep

    - name: Run bandit for crypto issues
      run: |
        bandit -r git_safe/ -f json -o bandit-crypto-report.json -ll -i || true
        bandit -r git_safe/ -ll -i

    - name: Run semgrep crypto rules
      run: |
        semgrep --config=p/python --config=p/security-audit --config=p/secrets git_safe/ --json --output=semgrep-report.json || true
        semgrep --config=p/python --config=p/security-audit --config=p/secrets git_safe/

    - name: Upload crypto analysis reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: crypto-analysis-reports
        path: |
          bandit-crypto-report.json
          semgrep-report.json